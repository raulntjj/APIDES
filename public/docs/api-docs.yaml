openapi: 3.0.0
info:
  title: Desempenho Esportivo
  description: |
    Documentação da API Rest para desempenho esportivo.

    Esta API, juntamente com seu banco de dados, está rodando localmente e serve como uma solução provisória enquanto ela não é colocada oficialmente em um servidor.

    Quanto à sessão para consumir a API, ainda é inexistênte e sigo aguardando ordens superiores para dar continuidade na mesma.
  version: 1.0.0
  contact:
    name: Suporte para DEVs
    email: raul.oliveira@versatecnologia.com.br
    url: https://versatecnologia.com.br
  license:
    name: License GPLv3
    url: https://gnu.org/licenses/gpl-3.0.html
  termsOfService: https://versatecnologia.com.br
servers:
  - description: API
    url: https://f7d7-45-70-34-167.ngrok-free.app
tags:
  # - name: Sessão de Clientes da API
  #   description: Por ordens superiores, por enquanto, não será necessário lidar com sessões para consumidores.
  - name: Sessão DE USUÁRIOS
    description: Rotas para controle de sessões de usuários
  - name: Senha
    description: Rotas para controle de senha de usuários
  - name: Usuário
    description: Rotas para controle de usuário
  - name: Evento
    description: Rotas para controle de eventos
  - name: Dia de Evento
    description: Rotas para controle de dias de evento
  - name: Instituição
    description: Rotas para controle de instituições
  - name: Modalidade
    description: Rotas para controle de modalidades
  - name: Equipe
    description: Rotas para controle de equipes
  - name: Participante
    description: Rotas para controle de participantes
  - name: Critério
    description: Rotas para controle de critérios
  - name: Subcritério
    description: Rotas para controle de sub-critérios
  - name: Item
    description: Rotas para controle de itens
  - name: Julgamento
    description: Rotas para controle de julgamentos
  - name: Avaliação
    description: Rotas para controle de avaliações

paths:
  /api/login:
    post:
      tags:
        - Sessão DE USUÁRIOS
      summary: Autenticar usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@teste.com
                password:
                  type: string
                  example: 123456789
      responses:
        '201':
          description: Token para autenticar usuários
        '400':
          description: Falha ao autenticar usuário

  /api/logout:
    post:
      tags:
        - Sessão DE USUÁRIOS
      summary: Deslogar usuário
      parameters:
        - in: header
          name: Token
          required: true
          description: Token de sessão obtido no login (Bearer token)
          schema:
            type: string
      responses:
        '201':
          description: Usuário deslogado com sucesso
        '400':
          description: Falha ao autenticar usuário

  /api/user:
    get:
      tags:
        - Sessão DE USUÁRIOS
      summary: Obter dados do usuário logado
      parameters:
        - in: header
          name: Token
          required: true
          description: Token de sessão obtido no login (Bearer token)
          schema:
            type: string
      responses:
        '200':
          description: Dados do usuário
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Erro ao buscar usuário


  /api/password/change:
    post:
      tags:
        - Senha
      summary: Trocar senha do usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  example: 12345678
                new_password:
                  type: string
                  example: 123456789
                new_password_confirmation:
                  type: string
                  example: 123456789
      responses:
        '201':
          description: Senha alterada com sucesso
        '400':
          description: Falha ao alterar senha

  /api/password/forgot:
    post:
      tags:
        - Senha
      summary: Deslogar usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@teste.com
      responses:
        '201':
          description: Senha alterada com sucesso
        '400':
          description: Falha ao alterar senha


  /api/users:
    get:
      tags:
        - Usuário
      summary: Lista todos os usuários
      responses:
        '200':
          description: Lista de usuários recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Erro ao buscar usuário
    post:
      tags:
        - Usuário
      summary: Cria um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Falha ao adicionar usuário
  /api/users/{id}:
    get:
      tags:
        - Usuário
      summary: Obtém um usuário pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do usuário a ser obtido
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Usuário recuperado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado

    put:
      tags:
        - Usuário
      summary: Atualiza um usuário existente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do usuário a ser atualizado
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado
        '400':
          description: Falha ao atualizar usuário

    delete:
      tags:
        - Usuário
      summary: Remove um usuário pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do usuário a ser removido
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Usuário removido com sucesso
        '404':
          description: Usuário não encontrado
  /api/judges:
    get:
      tags:
        - Usuário
      summary: Lista todos os usuários do grupo jurados
      responses:
        '200':
          description: Lista de usuários recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Erro ao buscar usuário
  /api/admins:
    get:
      tags:
        - Usuário
      summary: Lista todos os usuários do grupo administrador
      responses:
        '200':
          description: Lista de usuários recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Erro ao buscar usuário
  /api/defaults:
    get:
      tags:
        - Usuário
      summary: Lista todos os usuários do grupo padrão
      responses:
        '200':
          description: Lista de usuários recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Erro ao buscar usuários

  /api/events:
    get:
      tags:
        - Evento
      summary: Lista todos os eventos
      responses:
        '200':
          description: Lista de eventos recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '400':
          description: Erro ao buscar evento
    post:
      tags:
        - Evento
      summary: Cria um novo evento
      description: Esta requisição irá preecher as tabelas EventDay, e EventAddress. Então será obrigatório o envio dos atributos das mesmas. Como a data e index 1 para Event Day e dados de endereço para EventAddress, em caso de dúvida, verificar no EventRequest. Abaixo também foi deixado o exemplo de requisição
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Event'
                - $ref: '#/components/schemas/EventAddress'
                - $ref: '#/components/schemas/EventDay'
      responses:
        '201':
          description: evento criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Falha ao adicionar evento
  /api/events/{id}:
    get:
      tags:
        - Evento
      summary: Obtém um evento pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do evento a ser obtido
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: evento recuperado com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Event'
                  - $ref: '#/components/schemas/EventAddress'
                  - $ref: '#/components/schemas/EventDay'
        '404':
          description: evento não encontrado

    put:
      tags:
        - Evento
      summary: Atualiza um evento existente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do evento a ser atualizado
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDay'
      responses:
        '200':
          description: evento atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDay'
        '404':
          description: evento não encontrado
        '400':
          description: Falha ao atualizar evento

    delete:
      tags:
        - Evento
      summary: Remove um evento pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do evento a ser removido
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: evento removido com sucesso
        '404':
          description: evento não encontrado

  /api/days:
    get:
      tags:
        - Dia de Evento
      summary: Lista todos os dias
      responses:
        '200':
          description: Lista de dias recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventDay'
        '400':
          description: Erro ao buscar dia
    post:
      tags:
        - Dia de Evento
      summary: Cria um novo dia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDay'
      responses:
        '201':
          description: dia criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDay'
        '400':
          description: Falha ao adicionar dia
  /api/days/{id}:
    get:
      tags:
        - Dia de Evento
      summary: Obtém um dia pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do dia a ser obtido
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: dia recuperado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDay'
        '404':
          description: dia não encontrado

    put:
      tags:
        - Dia de Evento
      summary: Atualiza um dia existente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do dia a ser atualizado
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDay'
      responses:
        '200':
          description: dia atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDay'
        '404':
          description: dia não encontrado
        '400':
          description: Falha ao atualizar dia

    delete:
      tags:
        - Dia de Evento
      summary: Remove um dia pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do dia a ser removido
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: dia removido com sucesso
        '404':
          description: dia não encontrado

  /api/institutions:
    get:
      tags:
        - Instituição
      summary: Lista todos as Instituições
      responses:
        '200':
          description: Lista de Instituições recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution'
        '400':
          description: Erro ao buscar Instituição
    post:
      tags:
        - Instituição
      summary: Cria uma nova Instituição
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Institution'
      responses:
        '201':
          description: Instituição criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
        '400':
          description: Falha ao adicionar Instituição
  /api/institutions/{id}:
    get:
      tags:
        - Instituição
      summary: Obtém uma Instituição pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da Instituição a ser obtido
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Instituição recuperado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
        '404':
          description: Instituição não encontrada

    put:
      tags:
        - Instituição
      summary: Atualiza uma Instituição existente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da Instituição a ser atualizada
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Institution'
      responses:
        '200':
          description: Instituição atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
        '404':
          description: Instituição não encontrada
        '400':
          description: Falha ao atualizar Instituição

    delete:
      tags:
        - Instituição
      summary: Remove uma Instituição pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da Instituição a ser removida
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Instituição removida com sucesso
        '404':
          description: Instituição não encontrada

  /api/modalities:
    get:
      tags:
        - Modalidade
      summary: Lista todos as modalidades
      responses:
        '200':
          description: Lista de modalidades recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modality'
        '400':
          description: Erro ao buscar modalidade
    post:
      tags:
        - Modalidade
      summary: Cria uma nova modalidade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Modality'
      responses:
        '201':
          description: modalidade criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modality'
        '400':
          description: Falha ao adicionar modalidade
  /api/modalities/{id}:
    get:
      tags:
        - Modalidade
      summary: Obtém uma modalidade pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da modalidade a ser obtida
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: modalidade recuperada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modality'
        '404':
          description: modalidade não encontrada

    put:
      tags:
        - Modalidade
      summary: Atualiza uma modalidade existente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da modalidade a ser atualizada
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Modality'
      responses:
        '200':
          description: modalidade atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modality'
        '404':
          description: modalidade não encontrado
        '400':
          description: Falha ao atualizar modalidade

    delete:
      tags:
        - Modalidade
      summary: Remove uma modalidade pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da modalidade a ser removida
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: modalidade removida com sucesso
        '404':
          description: modalidade não encontrada

  /api/teams:
    get:
      tags:
        - Equipe
      summary: Lista todos as Equipes
      responses:
        '200':
          description: Lista de Equipes recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        '400':
          description: Erro ao buscar Equipe
    post:
      tags:
        - Equipe
      summary: Cria uma nova Equipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          description: Equipe criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Falha ao adicionar Equipe
  /api/teams/{id}:
    get:
      tags:
        - Equipe
      summary: Obtém uma Equipe pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da Equipe a ser obtida
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Equipe recuperada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Equipe não encontrada

    put:
      tags:
        - Equipe
      summary: Atualiza uma Equipe existente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da Equipe a ser atualizada
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: Equipe atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Equipe não encontrado
        '400':
          description: Falha ao atualizar Equipe

    delete:
      tags:
        - Equipe
      summary: Remove uma Equipe pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da Equipe a ser removida
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Equipe removida com sucesso
        '404':
          description: Equipe não encontrada

  /api/participants:
    get:
      tags:
        - Participante
      summary: Lista todos os participantes
      responses:
        '200':
          description: Lista de participantes recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant'
        '400':
          description: Erro ao buscar Participante
    post:
      tags:
        - Participante
      summary: Cria um novo Participante
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
      responses:
        '201':
          description: Participante criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
        '400':
          description: Falha ao adicionar Participante
  /api/participants/{id}:
    get:
      tags:
        - Participante
      summary: Obtém um Participante pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Participante a ser obtido
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Participante recuperado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
        '404':
          description: Participante não encontrado

    put:
      tags:
        - Participante
      summary: Atualiza um Participante existente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Participante a ser atualizado
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
      responses:
        '200':
          description: Participante atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
        '404':
          description: Participante não encontrado
        '400':
          description: Falha ao atualizar Participante

    delete:
      tags:
        - Participante
      summary: Remove um Participante pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Participante a ser removido
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Participante removido com sucesso
        '404':
          description: Participante não encontrado

  /api/criteria:
    get:
      tags:
        - Critério
      summary: Lista todos os Criterios
      responses:
        '200':
          description: Lista de Criterios recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Criterion'
        '400':
          description: Erro ao buscar Criterio
    post:
      tags:
        - Critério
      summary: Cria um novo Criterio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Criterion'
      responses:
        '201':
          description: Criterio criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Criterion'
        '400':
          description: Falha ao adicionar Criterio
  /api/criteria/{id}:
    get:
      tags:
        - Critério
      summary: Obtém um Criterio pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Criterio a ser obtido
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Criterio recuperado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Criterion'
        '404':
          description: Criterio não encontrado

    put:
      tags:
        - Critério
      summary: Atualiza um Criterio existente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Criterio a ser atualizado
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Criterion'
      responses:
        '200':
          description: Criterio atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Criterion'
        '404':
          description: Criterio não encontrado
        '400':
          description: Falha ao atualizar Criterio

    delete:
      tags:
        - Critério
      summary: Remove um Criterio pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Criterio a ser removido
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Criterio removido com sucesso
        '404':
          description: Criterio não encontrado

  /api/subcriteria:
    get:
      tags:
        - Subcritério
      summary: Lista todos os Subcritérios
      responses:
        '200':
          description: Lista de Subcritérios recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubCriterion'
        '400':
          description: Erro ao buscar Subcritério
    post:
      tags:
        - Subcritério
      summary: Cria um novo Subcritério
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubCriterion'
      responses:
        '201':
          description: Subcritério criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCriterion'
        '400':
          description: Falha ao adicionar Subcritério
  /api/subcriteria/{id}:
    get:
      tags:
        - Subcritério
      summary: Obtém um Subcritério pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Subcritério a ser obtido
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Subcritério recuperado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCriterion'
        '404':
          description: Subcritério não encontrado

    put:
      tags:
        - Subcritério
      summary: Atualiza um Subcritério existente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Subcritério a ser atualizado
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubCriterion'
      responses:
        '200':
          description: Subcritério atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCriterion'
        '404':
          description: Subcritério não encontrado
        '400':
          description: Falha ao atualizar Subcritério

    delete:
      tags:
        - Subcritério
      summary: Remove um Subcritério pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Subcritério a ser removido
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Subcritério removido com sucesso
        '404':
          description: Subcritério não encontrado

  /api/items:
    get:
      tags:
        - Item
      summary: Lista todos os Items
      responses:
        '200':
          description: Lista de Items recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '400':
          description: Erro ao buscar Item
    post:
      tags:
        - Item
      summary: Cria um novo Item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          description: Item criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Falha ao adicionar Item
  /api/items/{id}:
    get:
      tags:
        - Item
      summary: Obtém um Item pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Item a ser obtido
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Item recuperado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Item não encontrado

    put:
      tags:
        - Item
      summary: Atualiza um Item existente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Item a ser atualizado
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: Item atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Item não encontrado
        '400':
          description: Falha ao atualizar Item

    delete:
      tags:
        - Item
      summary: Remove um Item pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Item a ser removido
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Item removido com sucesso
        '404':
          description: Item não encontrado

  /api/judgments:
    get:
      tags:
        - Julgamento
      summary: Lista todos os Julgamentos
      responses:
        '200':
          description: Lista de Julgamentos recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Judgment'
        '400':
          description: Erro ao buscar Julgamento
    post:
      tags:
        - Julgamento
      summary: Cria um novo Julgamento
      description: O atributo scores é em formato JSON, favor verificar antes de enviar. Dentro do mesmo possui um ou mais score
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Judgment'
      responses:
        '201':
          description: Julgamento criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Judgment'
        '400':
          description: Falha ao adicionar Julgamento
  /api/judgments/{id}:
    get:
      tags:
        - Julgamento
      summary: Obtém um Julgamento pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Julgamento a ser obtido
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Julgamento recuperado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Judgment'
        '404':
          description: Julgamento não encontrado

    put:
      tags:
        - Julgamento
      summary: Atualiza um Julgamento existente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Julgamento a ser atualizado
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Judgment'
      responses:
        '200':
          description: Julgamento atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Judgment'
        '404':
          description: Julgamento não encontrado
        '400':
          description: Falha ao atualizar Julgamento

    delete:
      tags:
        - Julgamento
      summary: Remove um Julgamento pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do Julgamento a ser removido
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Julgamento removido com sucesso
        '404':
          description: Julgamento não encontrado

  /api/evaluations:
    get:
      tags:
        - Avaliação
      summary: Lista todos as availiações
      responses:
        '200':
          description: Lista de availiações recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation'
        '400':
          description: Erro ao buscar Avaliação
    post:
      tags:
        - Avaliação
      summary: Cria uma nova Avaliação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation'
      responses:
        '201':
          description: Avaliação criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
        '400':
          description: Falha ao adicionar Avaliação
  /api/evaluations/{id}:
    get:
      tags:
        - Avaliação
      summary: Obtém uma Avaliação pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da Avaliação a ser obtida
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Avaliação recuperada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
        '404':
          description: Avaliação não encontrada

    put:
      tags:
        - Avaliação
      summary: Atualiza uma Avaliação existente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da Avaliação a ser atualizada
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation'
      responses:
        '200':
          description: Avaliação atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
        '404':
          description: Avaliação não encontrado
        '400':
          description: Falha ao atualizar Avaliação

    delete:
      tags:
        - Avaliação
      summary: Remove uma Avaliação pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da Avaliação a ser removida
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Avaliação removida com sucesso
        '404':
          description: Avaliação não encontrada

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID do usuário
          example: 1
        name:
          type: string
          description: Nome do usuário
          example: "João"
        lastname:
          type: string
          description: Sobrenome do usuário
          example: "Da Silva"
        birthday:
          type: string
          format: date
          description: Data de nascimento do participante
          example: "2000-01-01"
        gender:
          type: string
          description: Gênero do participante
          example: "Male"
        photo:
          type: string
          description: Caminho para foto do usuário
          nullable: true
          example: "path/image.jpg"
        email:
          type: string
          format: email
          description: Email do usuário
          example: "joao@gmail.com"
        password:
          type: string
          description: Senha do usuário
          example: "12345678"
        interfaceLanguage:
          type: integer
          description: Idioma da interface do usuário
          example: "pt-BR"
        role:
          type: integer
          description: Grupo do usuário
          example: "participant"
      required:
        - name
        - lastname
        - email
        - password
        - gender
        - birthday
        - interfaceLanguage
        - role

    Event:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID do evento
          example: 1
        name:
          type: string
          description: Nome do evento
          example: "Treinamento"
        logo:
          type: string
          description: Caminho para logo do evento
          nullable: true
          example: "path/image.jpg"
      required:
        - name

    EventAddress:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID do endereço
          example: 1
        event_id:
          type: integer
          format: int64
          description: ID do evento
          example: 1
        address:
          type: string
          description: Rua, avenida, etc.
          example: "Rua do sol"
        number:
          type: integer
          format: int64
          description: Número do imóvel
          example: "120"
        neighborhood:
          type: string
          description: Bairro, distrito, etc.
          example: "Alvorada"
        city:
          type: string
          description: Cidade
          example: "Entre Folhas"
        state:
          type: string
          description: Estado
          example: "MG"
        country:
          type: string
          description: País
          example: "Brasil"
        cep:
          type: string
          description: Código Postal (CEP)
          example: 35300010
      required:
        - event_id
        - address
        - number
        - neighborhood
        - city
        - state
        - country
        - cep

    EventDay:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID do dia de evento
          example: 1
        event_id:
          type: integer
          format: int64
          description: ID do evento
          example: 1
        date:
          type: string
          format: date
          description: Data
          example: "2024-10-10"
        startHour:
          type: string
          format: time
          description: Hora de início do evento
          example: "20:00:00"
        index:
          type: integer
          format: int64
          description: Índice ordinário
          example: 2
      required:
        - event_id
        - date
        - startHour
        - index

    Institution:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID da instituição
          example: 1
        name:
          type: string
          description: Nome da instituição
          example: JEMG
        logo:
          type: string
          description: Caminho para logo
          example: "path/logo.jpeg"
      required:
        - name

    Modality:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID da modalidade
          example: 1
        name:
          type: string
          description: Nome da modalidade
          example: "Futebol"
        logo:
          type: string
          description: Caminho para logo
          example: "path/logo.jpeg"
      required:
        - name

    Team:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID do time
          example: 1
        name:
          type: string
          description: Nome do time
          example: Cruzeiro
        logo:
          type: string
          description: Caminho para logo
          example: path/logo.jpeg
      required:
        - name

    Participant:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID do participante
          example: 1
        user_id:
          type: integer
          format: int64
          description: ID do usuário
          example: 1
        team_id:
          type: integer
          format: int64
          description: ID do time do participante
          example: 1
        institution_id:
          type: integer
          format: int64
          description: ID da instituição
          nullable: true
        modality_id:
          type: integer
          format: int64
          description: ID da modalidade do participante
          example: 1
        position:
          type: string
          description: Posição do participante
          nullable: true
          example: ST
      required:
        - user_id
        - team_id
        - modality_id

    Criterion:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID do critério
          example: 1
        name:
          type: string
          description: Nome do critério
          example: Técnica
        points:
          type: string
          description: Pontos do critério
          nullable: true
          example: 100
      required:
        - name

    SubCriterion:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID do subcritério
          example: 1
        name:
          type: string
          description: Nome do subcritério
          example: Finalizações
        points:
          type: string
          description: Pontos do subcritério
          nullable: true
          example: 25
      required:
        - name

    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID do item
          example: 1
        subCriterion_id:
          type: integer
          format: int64
          description: ID do subcritério
          example: 1
        name:
          type: string
          description: Nome do item
          example: Penâlti
        aspect:
          type: string
          enum:
            - mensuravel
            - quantitativo
          description: Poderá ser "mensuravel" ou "quantitativo"
          example: quantitativo
        weight:
          type: number
          format: float
          description: Peso para cálculo da nota final caso o aspecto seja quantitativo, caso contrário será nulo.
          nullable: true
          example: 0.02
      required:
        - subCriterion_id
        - name
        - aspect
        - weight

    Judgment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID do julgamento
          example: 1
        evaluation_id:
          type: integer
          format: int64
          description: ID da avaliação
          example: 1
        item_id:
          type: integer
          format: int64
          description: ID do item que será julgado
          example: 1
        attempt:
          type: integer
          format: int64
          description: Número de tentativas
          example: 30
          nullable: true
        correctAttempt:
          type: integer
          format: int64
          description: Número de tentativas corretas
          nullable: true
          example: 25
        failAttempt:
          type: integer
          format: int64
          description: Número de tentativas falhas
          nullable: true
          example: 5
        score:
          type: number
          format: float
          description: Nota final
          nullable: true
          example: 10
      required:
        - evaluation_id
        - item_id

    Evaluation:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID da avaliação
          example: 1
        event_id:
          type: integer
          format: int64
          description: ID do evento da avaliação
          nullable: true
          example: 1
        participant_id:
          type: integer
          format: int64
          description: ID do participante avaliado
          example: 1
        modality_id:
          type: integer
          format: int64
          description: ID da modalidade da avaliação
          example: 1
        judge_id:
          type: integer
          format: int64
          description: ID do usuário que irá julgar
          example: 2
        date:
          type: string
          format: date
          description: Data da avaliação
          nullable: true
          example: "2024-10-10"
      required:
        - participant_id
        - modality_id
        - judge_id
